version: "3.9"

services:

  api1:
    build:
      context: ./ci4-api/.
      dockerfile: Dockerfile
    container_name: api1-native
    networks:
      - php-api
    restart: on-failure
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ../ci4-api:/var/www/html/ci4-api/
    depends_on:
      - postgresql
      - redis
    expose:
      - "4000"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == api1
      restart_policy:
        condition: on-failure

  api2:
    build:
      context: ./ci4-api/.
      dockerfile: Dockerfile
    container_name: api2-native
    networks:
      - php-api
    restart: on-failure
    ports:
      - "4001:80"
    volumes:
      - ../ci4-api:/var/www/html/ci4-api/
    depends_on:
      - postgresql
      - redis
    expose:
      - "4001"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == api2
      restart_policy:
        condition: on-failure

  api3:
    build:
      context: ./ci4-api/.
      dockerfile: Dockerfile
    container_name: api3-native
    networks:
      - php-api
    restart: on-failure
    ports:
      - "4002:80"
    volumes:
      - ../ci4-api:/var/www/html/ci4-api/
    depends_on:
      - postgresql
      - redis
    expose:
      - "4002"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == api3
      restart_policy:
        condition: on-failure

  composer:
    build:
      context: ./ci4-api/.
    command: composer install
    volumes:
      - ../ci4-api/:/var/www/html/ci4-api/
    depends_on:
      - api1
      - api2
      - api3

  rename-env:
    build:
      context: ./ci4-api/.
    command: cp .env-sample .env
    volumes:
      - ../ci4-api/:/var/www/html/ci4-api/
    depends_on:
      - api1
      - api2
      - api3

  postgresql:
    image: postgres:13.4-alpine
    container_name: postgres-native
    networks:
      - php-api
    restart: on-failure
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PWD}"
    volumes:
      - ../postgres:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - php-api

  redis:
    image: redis:6-alpine
    networks: 
      - php-api
    container_name: redis-native
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    restart: "on-failure"
    environment:
      REDIS_PORT: "${REDIS_PORT}"

networks:
  php-api: